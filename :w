#! usr/env/python3
import re
import praw
from decouple import config
import requests
import shutil


class Origami:
    def __init__(self):
        self.CLIENT_ID = config('CLIENT_ID')
        self.CLIENT_SECRET = config('CLIENT_SECRET')
        self.USER_AGENT = config('USER_AGENT')
        self.USERNAME = config('USERNAME')
        self.PASSWORD = config('PASSWORD')
        self.REDIRECT_URI = "http://localhost:8080"
        self.CODE = "d2XiS2gVRf7pGD0mABQAc8k0c0M-Kw"
        self.REFRESH_TOKEN = "471899368806-CBrF1ViAY8OyWa-CDIbjNePgpWFI6w"

    def initialize_reddit_client(self):
        reddit_authorized = praw.Reddit(
            client_id=self.CLIENT_ID,
            client_secret=self.CLIENT_SECRET,
            redirect_uri=self.REDIRECT_URI,
            user_agent=self.USER_AGENT,
        )
        return reddit_authorized

    def wallpaper_getter(self, sub: str, limit: int):
        reddit = self.initialize_reddit_client()
        subreddit = reddit.subreddit(sub)
        hottest_post = subreddit.hot(limit=limit)

        for post in hottest_post:
            # getting post submission so that I can look at the comments
            post_submission = reddit.submission(id=post.id)

            # looping over the comments
            for comments in post_submission.comments:
                # checking if the current comment has an author because people can make comments without having their names showing
                if comments.author is not None:

                    # looking for ze-robot coz that's what r/wallpaper uses. Thinking of making this a variable incase I wanna change subreddits
                    if comments.author.name == "ze-robot":
                        # Getting the body of the comments
                        body = comments.body

                        # Complex regex just to get 1366 x 768
                        m = re.findall(r"\[[1-9×]+\]\([\w+://\.\-×]+\)", body)

                        # looping over the matches even tho it's just one. I guess I need to fix this when I come online
                        for match in m:
                            print(post.title)
                            print(match)
                            print("Getting an image")

                            # Getting the image using requests so that we can get the raw bytes of the image

                            image = requests.get(
                                # This just strips out somethings
                                match[11:len(match)-1],
                                allow_redirects=True
                            )

                            # Check if it is a 200 code that the requests stores
                            if image.status_code < 300:
                                print("writing to the file")

                                # Writing to the file using "wb" so that I can write the bits to the image
                                with open(post.title + ".jpg", 'wb') as s:
                                    s.write(image.content)
                            else:
                                # Works if somthing goes wrong
                                print("Something went wrong somewhere")
